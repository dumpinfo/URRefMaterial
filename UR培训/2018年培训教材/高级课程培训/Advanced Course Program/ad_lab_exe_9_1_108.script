def ad_lab_exe_9_1_108():
  modbus_add_signal("192.168.1.6", 255, 1, 3, "MODBUS_1")
  modbus_set_signal_update_frequency("MODBUS_1", 125)
  modbus_add_signal("192.168.1.6", 255, 0, 3, "MODBUS_9")
  modbus_set_signal_update_frequency("MODBUS_9", 50)
  set_standard_analog_input_domain(0, 1)
  set_standard_analog_input_domain(1, 1)
  set_tool_analog_input_domain(0, 1)
  set_tool_analog_input_domain(1, 1)
  set_analog_outputdomain(0, 1)
  set_analog_outputdomain(1, 1)
  set_tool_voltage(24)
  set_standard_digital_input_action(0, "default")
  set_standard_digital_input_action(1, "default")
  set_standard_digital_input_action(2, "default")
  set_standard_digital_input_action(3, "default")
  set_standard_digital_input_action(4, "default")
  set_standard_digital_input_action(5, "default")
  set_standard_digital_input_action(6, "default")
  set_standard_digital_input_action(7, "default")
  set_tool_digital_input_action(0, "default")
  set_tool_digital_input_action(1, "default")
  modbus_set_runstate_dependent_choice("MODBUS_1",0)
  modbus_set_runstate_dependent_choice("MODBUS_9",0)
  set_tcp(p[8.297399616597305E-4,0.0011610992421191807,0.12772331188823377,0.0,0.0,0.0])
  set_payload(0.1, [0.0, 0.0, 0.0])
  set_gravity([0.0, 0.0, 9.82])
  global offset_f=p[0.0, 0.2, 0.0, 0.0, 0.0, 0.0]
  global tcp=1
  global offset_d=p[0.0, 0.0, -0.2, 0.0, 0.0, 0.0]
  global tcp2=p[0.2, 0.0, 0.05, 0.0, 1.5707964, 0.0]
  global i_var_1=1
  global offset_c=p[0.2, 0.0, -0.2, 0.0, 0.0, 0.0]
  global tcp1=p[0.0, 0.0, 0.2, 0.0, 0.0, 0.0]
  global offset_b=p[0.2, 0.0, 0.0, 0.0, 0.0, 0.0]
  global bool2=True
  global force1=124.23835
  global bool1=50
  global screw_4=p[0.010244422, -0.015909072, 0.31662855, 0.85676926, -1.3626392, 0.73663825]
  global screw_3=p[-0.0021469092, -0.010138742, 0.16725264, 0.85676926, -1.3626392, 0.73663825]
  global bit_3=True
  global screw_2=p[-0.11789555, 0.060871802, 0.33022428, 0.85676926, -1.3626392, 0.73663825]
  global screw_1=p[-0.13028689, 0.066642135, 0.18084837, 0.85676926, -1.3626392, 0.73663825]
  global length_1=0.2
  global pick_pos=p[0.28764468, 0.35738185, 0.36176643, 0.8076734, -2.8948507, -0.009301616]
  global fy=0.2
  global cp=p[0.036018707, 0.23811427, 0.07895236, 1.5486304, -2.5836353, -0.096085384]
  global rz=0.5235988
  global pos_d=p[0.16571523, 0.46059236, 0.5002956, -2.8920474, 0.024356836, 0.046286248]
  global pos_c=p[0.36558646, 0.45806554, 0.49357942, -2.8920474, 0.024356836, 0.046286248]
  global pos_b=p[0.3597006, 0.50741154, 0.29985195, -2.8920474, 0.024356836, 0.046286248]
  global abc3=p[-0.29271644, 0.5724363, 0.19956817, -2.446874, -1.8166907, 0.03053808]
  global abc2=0.0
  global abc1=0
  global bit1=[False, True, False, False, True, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
  global z=0.07895236
  global y=0.2
  global int=5
  global x=0.1
  global abc=True
  global offset=p[0.1, 0.2, 0.0, 0.0, 0.0, 0.5235988]
  global bool_1=True
  global select_no=1
  global offset_s4=p[0.075, -0.075, 0.0, 0.0, 0.0, 0.0]
  global offset_s3=p[-0.075, -0.075, 0.0, 0.0, 0.0, 0.0]
  global count=1
  global offset_s2=p[0.075, 0.075, 0.0, 0.0, 0.0, 0.0]
  global safe_pos=p[0.036018707, 0.23811427, 0.47895235, 1.5486304, -2.5836353, -0.096085384]
  global offset_s1=p[-0.075, 0.075, 0.0, 0.0, 0.0, 0.0]
  global current_pos=p[0,0,0,0,0,0]
  global t1=0.0
  global t2=0.4
  global t3=0.4
  global t4=0.0
  global t5=3.14
  global t6=0.0
  global add_x=5.0
  global add_y=2.0
  global add_return=7.0
  global target_pos=p[0,0,0,0,0,0]
  global u26426u24231=p[0.0,0.0,0.0,0.0,0.0,0.0]
  global u24037u20855=get_forward_kin()
  global plane_1=p[-0.05354340703832602,0.7379880984438217,-0.010016798825696852,-2.233255862178301,-2.111658992685216,-0.10776861331170197]
  global plane_2=p[-0.0535814714617062,0.638878837442093,-0.10999439459026486,-2.23754044392575,-2.1159479760002364,-0.09820246034297925]
  $ 1 "BeforeStart"
  $ 2 "open≔socket_open('192.168.1.6',5000)"
  global open=socket_open("192.168.1.6",5000)
  $ 3 "current_pos≔p[0,0,0,0,0,0]"
  global current_pos=p[0,0,0,0,0,0]
  $ 4 "循环 open≟ False "
  while (open ==   False  ):
    $ 5 "open≔socket_open('192.168.1.6',5000)"
    global open=socket_open("192.168.1.6",5000)
  end
  while (True):
    $ 6 "机器人程序"
    $ 7 "sendToServer≔'send to server'"
    global sendToServer=request_string_from_primary_client("send to server")
    $ 8 "socket_send_string(sendToServer)"
    socket_send_string(sendToServer)
    $ 9 "receiveFromServ≔socket_read_ascii_float(3)"
    global receiveFromServ=socket_read_ascii_float(3)
    $ 10 "循环 receiveFromServ[0]≠3"
    while (receiveFromServ[0] != 3):
      $ 11 "等待: 0.3"
      sleep(0.3)
      $ 12 "receiveFromServ≔socket_read_ascii_float(3)"
      global receiveFromServ=socket_read_ascii_float(3)
    end
    $ 13 "x≔receiveFromServ[1]"
    global x=receiveFromServ[1]
    $ 14 "y≔receiveFromServ[2]"
    global y=receiveFromServ[2]
    $ 15 "rz≔d2r(receiveFromServ[3])"
    global rz=d2r(receiveFromServ[3])
    $ 16 "current_pos≔get_actual_tcp_pose()"
    global current_pos=get_actual_tcp_pose()
    $ 17 "MoveJ"
    $ 18 "current_pos"
    movej(current_pos, a=1.3962634015954636, v=1.0471975511965976)
    $ 19 "offset≔p[x,y,0,0,0,rz]"
    global offset=p[x,y,0,0,0,rz]
    $ 20 "target_pos≔pose_trans(current_pos,offset)"
    global target_pos=pose_trans(current_pos,offset)
    $ 21 "MoveJ"
    $ 22 "target_pos"
    movej(target_pos, a=1.3962634015954636, v=1.0471975511965976)
  end
end
